{
	"New App": {
		"prefix": "framework",
		"body": [
			"use fyrox::engine::{Engine, resource_manager::Resourcemanager, framework::Framework};",
			"struct Game { }",
			"impl GameState for Game {",
			"    fn init(_engine: &mut Engine) -> Self where Self: Sized {",
			"        Self { }",
			"    }",
			"    fn on_tick(&mut self, engine: &mut Engine, dt: f32, control_flow: &mut ControlFlow) { }",
			"    fn on_ui_message(&mut self, engine: &mut Engine, message: UiMessage) { }",
			"    fn on_device_event(&mut self, engine: &mut Engine, device_id: DeviceId, event: DeviceEvent) { }",
			"    fn on_window_event(&mut self, engine: &mut Engine, event: WindowEvent) { }",
			"    fn on_exit(&mut self, engine: &mut Engine) { }",
			"}",
			"fn main() {",
			"    Framework::<Game>::new()",
			"        .unwrap()",
			"        .title(\"${1:gamename}\")",
			"        .run();",
			"}"
		]
	},
	"New Scene 1" : {
		"prefix": "new-scene-1",
		"body": [
			"fn load_scene(resource_manager: ResourceManager) -> Scene {",
			"    let mut scene = Scene::new();",
			"    let scene_resource = block_on(",
			"       resource_manager",
			"           .request_model(\"path/to/your/scene.rgs\"),",
			"    )",
			"        .unwrap();",			
			"    let child_scene = scene_resource.instantiate_geometry(&mut scene);",
			"    scene",
			"}"
			
		]
	},
	"New Scene 2": {
		"prefix": "new-scene-2",
		"body": [
			"fn create_scene(engine: &mut Engine) -> Handle<Scene> {",
			"    let mut scene = Scene::new();",
			"    engine.scenes.add(scene)",
			"}"
		]
	},
	"Create Model with Texture":{
		"prefix": "create-model-with-texture",
		"body": [""]
	}
}